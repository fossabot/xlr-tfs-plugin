<?xml version='1.0' encoding='UTF-8'?>
<!--

    Copyright 2019 XEBIALABS

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<synthetic xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd" xmlns="http://www.xebialabs.com/deployit/synthetic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
	<!-- Common items -->
	<type type="tfs.Server" extends="configuration.HttpConnection">
        <property name="scriptLocation" default="TestConnection.py" hidden="true" />
        <property name="domain" label="Domain" description="Domain to be used for NTLM authentication" required="false" />
        <property name="authenticationMethod" label="Authentication Method" kind="enum" required="true">
            <enum-values>
                <value>Basic</value>
                <value>Ntlm</value>
            </enum-values>
        </property>
		<property name="preferredLibType" label="Preferred Library for Connectivity" description="SDK for versions 2010-2013, REST for 2013 and above, CLI for older" kind="enum" required="true">
            <enum-values>
                <value>SDK</value>
                <value>REST</value>
                <value>CLI</value>
            </enum-values>
        </property>
    </type>
	
	<!-- TFS POWER TOOLS -->
	<type type="tfpt.CreateWorkItem" extends="remoteScript.Windows">
		<property name="iconLocation" default="tfs/tfs.png" hidden="true" />
		<property name="taskColor" hidden="true" default="#68217a" />
		<property name="cifsPort" kind="integer" category="input" default="445" />
		<property name="remotePath" category="input" default="C:\xlr-tfs2013-plugin" />
		<property name="script" category="input" default="CreateWorkItem.bat &quot;${project}&quot; &quot;${type}&quot; &quot;${collection}&quot; &quot;${title}&quot; &quot;${assignedTo}&quot; &quot;${description}&quot;" />
		<property name="workItemId" category="output" />
	</type>

	<type type="tfpt.GetWorkItem" extends="remoteScript.Windows">
		<property name="iconLocation" default="tfs/tfs.png" hidden="true" />
		<property name="taskColor" hidden="true" default="#68217a" />
		<property name="cifsPort" kind="integer" category="input" default="445" />
		<property name="remotePath" category="input" default="C:\xlr-tfs2013-plugin" />
		<property name="script" category="input" default="GetWorkItem.bat &quot;${workItemId}&quot; &quot;${collection}&quot;" />
	</type>

	<type type="tfpt.UpdateWorkItem" extends="remoteScript.Windows">
		<property name="iconLocation" default="tfs/tfs.png" hidden="true" />
		<property name="taskColor" hidden="true" default="#68217a" />
		<property name="cifsPort" kind="integer" category="input" default="445" />
		<property name="remotePath" category="input" default="C:\xlr-tfs2013-plugin" />
		<property name="script" category="input" default="UpdateWorkItem.bat &quot;${workItemId}&quot; &quot;${collection}&quot; &quot;${fields}&quot;" />
	</type>
	
	<!-- TFS REST API -->
	<type type="tfs.VirtualTask" extends="xlrelease.PythonScript" virtual="true">
		<property name="iconLocation" default="tfs/tfs.png" hidden="true" />
		<property name="taskColor" hidden="true" default="#68217a" />
		<property name="tfsServer" category="input" label="Server" referenced-type="tfs.Server" kind="ci" />
		<property name="username" category="input" required="false" />
		<property name="password" category="input" password="true" required="false" />
        <property name="domain" category="input" required="false" />

		<property name="collectionName" category="input" default="DefaultCollection" />
	</type>

	<type type="tfsrest.CreateWorkItem" extends="tfs.VirtualTask">
		<property name="teamProjectName" category="input" />
		<property name="workItemType" category="input" />
		<property name="workItemTitle" category="input" />
		<property name="workItemDescription" category="input" />
		<property name="httpStatusCode" category="output" />
		<property name="workItemId" category="output" />
	</type>
	<type type="tfsrest.AddWorkItemComment" extends="tfs.VirtualTask">
		<property name="workItemComment" category="input" />
		<property name="workItemId" category="input" />
	</type>

	<type type="tfsrest.GetTfsRepoArtifacts" extends="tfs.VirtualTask">
		<property name="scriptLocation" default="tfsrest/GetTfsRepoArtifacts.py" hidden="true" />
		<property name="scopePath" category="input" />
		<property name="artifactTempDir" category="input" />
    </type>

    <type type="tfsrest.QueueBuild" extends="tfs.VirtualTask" description="Queuing a TFS build">
        <property name="teamProjectName" category="input" />
        <property name="buildDefinitionName" category="input" />

        <property name="buildNumber" kind="integer" category="output" />
        <property name="buildStatus" kind="string" category="output" />
    </type>

	<!-- TFS SDK -->
	<type type="tfsdk.CreateWorkItem" extends="tfs.VirtualTask">
		<property name="projectName" category="input" label="Project Name" required="true" />
		<property name="workItemType" category="input" label="WorkItem Type" required="true" description="example:  Bug"/>
		<property name="workItemTitle" category="input" label="WorkItem Title" required="true" />
		<property name="workItemComment" category="input" label="WorkItem Comment" required="true" />
		<property name="workItemId" category="output"/> 
	</type>

	<type type="tfsdk.GetWorkItem" extends="tfs.VirtualTask">
		<property name="teamProjectName" category="input" />
		<property name="workItemId" category="input" />
		<property name="workItemTitle" category="output" />
	</type>

	<type type="tfsdk.UpdateWorkItem" extends="tfs.VirtualTask">
		<property name="teamProjectName" category="input" />
		<property name="workItemId" category="input" /> 
		<property name="workItemTitle" category="input" />
	</type>

    <type type="tfsdk.QueueBuild" extends="tfs.VirtualTask" description="Queuing a TFS build (only works for xaml based builds).">
        <property name="teamProjectName" category="input" />
        <property name="buildDefinitionName" category="input" />

        <property name="buildNumber" kind="integer" category="output" />
        <property name="buildStatus" kind="string" category="output" />
    </type>
    
    <!-- TFS Triggers -->
    
    <type type="tfsrest.GitCommitTrigger" label="TFS: Git Commit Poll" extends="xlrelease.ReleaseTrigger">
        <property name="tfsServer" category="Repository" label="Server" referenced-type="tfs.Server" kind="ci" description="TFS Server to poll"/>
        <property name="collection" category="Repository" required="true" default="DefaultCollection" description="Collection you wish to target" />
        <property name="project" category="Repository" required="true" description="Project you wish to target" />
        <property name="repository" category="Repository" required="true" description="Repository you wish to target" />
        <property name="branch" category="Repository" required="true" default="master" description="Git branch to poll" />
        <property name="username" category="Repository" default="" required="true" description="Username used to connect to the repository"/>
        <property name="password" category="Repository" default="" required="true" password="true" description="Password used to connect to the repository"/>
        <property name="domain" category="Repository" default="" required="true" description="Domain for NTLM Authentication"/>

        <property name="commitId" category="variables" required="false" description="SHA1 hash of the commit that triggered the release"/>
    </type>

    <type type="tfsrest.TfvcChangesetTrigger" label="TFS: TFVC Commit Poll" extends="xlrelease.ReleaseTrigger">
        <property name="tfsServer" category="Repository" label="Server" referenced-type="tfs.Server" kind="ci" description="TFS Server to poll"/>
        <property name="collection" category="Repository" required="true" default="DefaultCollection" description="Collection you wish to target" />
        <property name="project" category="Repository" required="true" description="Project you wish to target" />
        <property name="username" category="Repository" default="" required="true" description="Username used to connect to the repository"/>
        <property name="password" category="Repository" default="" required="true" password="true" description="Password used to connect to the repository"/>
        <property name="domain" category="Repository" default="" required="true" description="Domain for NTLM Authentication"/>

        <property name="changesetId" category="variables" required="false" description="Changeset ID of the commit that triggered the release"/>
    </type>

</synthetic>
